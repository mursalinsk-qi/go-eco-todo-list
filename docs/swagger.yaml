definitions:
  models.CreateTodo:
    properties:
      title:
        type: string
    type: object
  models.Todo:
    properties:
      complete:
        type: boolean
      id:
        type: integer
      title:
        type: string
    type: object
  models.TodoList:
    properties:
      TodoList:
        items:
          $ref: '#/definitions/models.Todo'
        type: array
    type: object
  models.UpdateTodo:
    properties:
      complete:
        type: boolean
      title:
        type: string
    type: object
info:
  contact:
    email: mursalin.sk@quantuminventions.com
    name: Mursalin Sk
  description: This is a simple todo list for practice CRUD Operation with Eco framework
    and PostgreSQL DB
  title: Todo List App
  version: "1.0"
paths:
  /api/todos:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TodoList'
      summary: get all todos
      tags:
      - todos
  /api/todos/{id}:
    get:
      parameters:
      - description: enter a id
        in: path
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
        "404":
          description: id not found
          schema:
            type: string
      summary: get a single todos
      tags:
      - todos
  /api/todos/create:
    post:
      consumes:
      - application/json
      description: store a new todo in list
      parameters:
      - description: enter your todo title
        in: body
        name: value
        schema:
          $ref: '#/definitions/models.CreateTodo'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Todo'
      summary: create todo
      tags:
      - todos
  /api/todos/delete/{id}:
    delete:
      consumes:
      - application/json
      description: delete a todo by its id
      parameters:
      - description: enter id to update
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
      summary: delete todo
      tags:
      - todos
  /api/todos/update/{id}:
    patch:
      consumes:
      - application/json
      description: update a todo by its id
      parameters:
      - description: enter id to update
        in: path
        name: id
        type: integer
      - description: enter values
        in: body
        name: value
        schema:
          $ref: '#/definitions/models.UpdateTodo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
        "404":
          description: id not found
          schema:
            type: string
      summary: update todo
      tags:
      - todos
swagger: "2.0"
